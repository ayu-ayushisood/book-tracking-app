{"version":3,"sources":["components/SelectBook.js","components/Book.js","components/Bookshelf.js","api/booksAPI.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["BookShelfChanger","state","isUpdating","changeShelf","event","props","onChangeShelf","book","setState","this","className","value","shelf","onChange","disabled","Component","Book","authors","undefined","join","src","imageLinks","thumbnail","SelectBook","title","Bookshelf","type","books","length","map","id","api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","maxResults","Search","searchedBooks","isSearching","error","updateQuery","target","searchBooks","updateBooks","shelvedBooks","shelvedBook","updateBook","to","placeholder","App","shelfChange","e","Promise","resolve","exact","path","render","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4eb52a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass BookShelfChanger extends Component {\n\tstate = {\n\t\tisUpdating: false\n\t};\n\n\tcomponentWillReceiveProps() {\n\t\tthis.setState({\n\t\t\tisUpdating: false\n\t\t});\n\t}\n\n\tchangeShelf = event => {\n\t\tthis.props.onChangeShelf(this.props.book, event);\n\t\tthis.setState({\n\t\t\tisUpdating: true\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.state.isUpdating ? 'dropdown_select loading' : 'dropdown_select'}>\n\t\t\t\t<select value={this.props.book.shelf} onChange={event => this.changeShelf(event)}>\n\t\t\t\t\t<option value=\"move\" disabled>\n\t\t\t\t\t\tMove to...\n\t\t\t\t\t</option>\n\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t\t<option value=\"none\">None</option>\n\t\t\t\t</select>\n\t\t\t\t{this.state.isUpdating && <div className=\"loader-two\" />}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nBookShelfChanger.propTypes = {\n\tbook: PropTypes.object.isRequired,\n\tonChangeShelf: PropTypes.func.isRequired\n};\n\nexport default BookShelfChanger;","import React from 'react';\nimport SelectBook from './SelectBook';\nimport PropTypes from 'prop-types';\n\nconst Book = props => {\n    const {book, onChangeShelf} = props;\n    const authors = book.authors === undefined ? 'Unknown Author' : book.authors.join(', ');\n    return (\n        <li>\n            <div className=\"book\">\n                <div className=\"top_section\">\n                    <img src={book.imageLinks.thumbnail} className=\"book_cover\"/>\n                    <SelectBook book={book} onChangeShelf={onChangeShelf}/>\n                </div>\n                <div className=\"title\">{book.title}</div>\n                <div className=\"authors\">{authors}</div>\n                \n            </div>\n        </li>\n    )\n}\n\nBook.propTypes = {\n    book: PropTypes.object.isRequired,\n    onChangeShelf: PropTypes.func.isRequired\n}\nexport default Book;","import React from 'react';\nimport Book from './Book';\nimport PropTypes from 'prop-types';\n\nconst Bookshelf = props => {\n    const {type, books, onChangeShelf} = props;\n    return (\n        <div className=\"book_shelf\">\n            <h2 className=\"shelf_name\">{type}</h2>\n            {books.length <= 0 ? (\n                <div className=\"empty\">No books at present in this shelf.</div>\n            ): (\n                <ol className=\"books\">\n                    {books.map( book => (\n                        <Book \n                            key={book.id}\n                            book={book}\n                            onChangeShelf={onChangeShelf}\n                        />\n                    ))}\n                </ol>\n            )}\n        </div>\n    )\n}\n\nBookshelf.propTypes = {\n    type: PropTypes.string.isRequired,\n    books: PropTypes.array.isRequired,\n    onChangeShelf: PropTypes.func.isRequired\n}\nexport default Bookshelf;\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query, maxResults })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Book from './Book';\nimport { Link } from 'react-router-dom';\nimport * as api from '../api/booksAPI';\n\nclass Search extends Component {\n\tstate = {\n\t\tquery: '',\n\t\tsearchedBooks: [],\n\t\tisSearching: false,\n\t\terror: false\n\t};\n\n\tupdateQuery = event => {\n\t\tthis.setState({ query: event.target.value }, () => {\n\t\t\tthis.searchBooks(event);\n\t\t});\n\t};\n\n\tsearchBooks = () => {\n\t\tconst { query } = this.state;\n\n\t\tif (query) {\n\t\t\tthis.setState({ isSearching: true });\n\t\t\tapi.search(query).then(res => {\n\t\t\t\tif (res.error) {\n\t\t\t\t\tthis.setState({ searchedBooks: [], isSearching: false, error: true });\n\t\t\t\t} else if (res) {\n\t\t\t\t\tthis.setState({ error: false });\n\t\t\t\t\tthis.updateBooks(res);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({ searchedBooks: [] });\n\t\t}\n\t};\n\n\tupdateBooks = books => {\n\t\tconst { shelvedBooks } = this.props;\n\t\tfor (const book of books) {\n\t\t\tbook.shelf = 'none';\n\t\t\tfor (let shelvedBook of shelvedBooks) {\n\t\t\t\tif (book.id === shelvedBook.id) book.shelf = shelvedBook.shelf;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tsearchedBooks: books,\n\t\t\tisSearching: false\n\t\t});\n\t};\n\n\tupdateBook = books => {\n\t\tconst {searchedBooks} = this.state;\n\t\tfor (const book of searchedBooks) {\n\t\t\tfor (const shelvedBook of books) {\n\t\t\t\tif (book.id === shelvedBook.id) book.shelf = shelvedBook.shelf;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ searchedBooks });\n\t};\n\n\tchangeShelf = (book, event) => {\n\t\tthis.props.onChangeShelf(book, event).then(books => this.updateBook(books));\n\t};\n\n\trender() {\n\t\tconst { searchedBooks } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"search\">\n\t\t\t\t<div className=\"search_bar\">\n\t\t\t\t\t<Link to=\"/\" className=\"back\">\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className=\"input_container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.query}\n\t\t\t\t\t\t\tplaceholder=\"Search by title or author\"\n\t\t\t\t\t\t\tonChange={event => this.updateQuery(event)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{ this.state.error && !this.state.isSearching && (\n\t\t\t\t\t<div className=\"results center\">\n\t\t\t\t\t\t<h3>No Results Found</h3>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{this.state.isSearching ? (\n\t\t\t\t\t<div className=\"loader\" />\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"results\">\n\t\t\t\t\t\t<ol className=\"books_grid\">\n\t\t\t\t\t\t\t{searchedBooks.map(book => (\n\t\t\t\t\t\t\t\t<Book key={book.id} book={book} onChangeShelf={this.changeShelf} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSearch.propTypes = {\n\tshelvedBooks: PropTypes.array.isRequired,\n\tonChangeShelf: PropTypes.func.isRequired\n};\n\nexport default Search;","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Bookshelf from './components/Bookshelf';\nimport Search from './components/Search';\nimport * as api from './api/booksAPI';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    books: [],\n  };\n\n  componentDidMount() {\n    api.getAll().then(res => {\n      this.setState({\n        books: res,\n      });\n    });\n  }\n\n  shelfChange = (book, e) => {\n    return new Promise(resolve => {\n      api.update(book, e.target.value).then(res => {\n        api.getAll().then(res => {\n          this.setState({ books: res },\n            resolve(res)\n          );\n        });\n      });\n    });\n  };\n\n  render() {\n    const { books } = this.state;\n    return (\n      <div className=\"App\">\n\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <>\n            <div className=\"list_books\">\n              <div className=\"app_header\">\n                <h1>MyReads</h1>\n              </div>\n              <Bookshelf\n                type=\"Currently Reading\"\n                books={books.filter(book => book.shelf === 'currentlyReading')}\n                onChangeShelf={this.shelfChange}\n              />\n              <Bookshelf\n                type=\"Want to Read\"\n                books={books.filter(book => book.shelf === 'wantToRead')}\n                onChangeShelf={this.shelfChange}\n              />\n              <Bookshelf\n                type=\"Read\"\n                books={books.filter(book => book.shelf === 'read')}\n                onChangeShelf={this.shelfChange}\n              />\n            </div>\n            <div className=\"add_book\">\n              <Link to=\"/search\">Add Book</Link>\n            </div>\n            </>\n          )} />\n        <Route\n          path=\"/search\"\n          render={() => <Search shelvedBooks={books} onChangeShelf={this.shelfChange} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}